apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'maven'
apply plugin: 'kotlin-kapt'
apply plugin: "jacoco"


group = 'com.example'
version = '1.0-SNAPSHOT'

description = """"""

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

ext {
    jerseyVersion = '2.19'
    jettyVersion = '9.2.12.v20150709'
    kafkaVersion = '3.2.0'
    confluentVersion = '4.0.0'
    daggerVersion="2.16"
    jacocoVersion = '0.8.1'
}


repositories {

    maven { url "https://packages.confluent.io/maven/" }
    maven { url "https://repo.maven.apache.org/maven2" }
    mavenCentral()
}
dependencies {

    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.4.31'

//    compile "org.mongodb:mongo-java-driver:3.5.0"
    implementation("org.mongodb:mongodb-driver-sync:4.3.1")

    compile "redis.clients:jedis:2.9.0"
//    compile 'org.mongodb:mongodb-driver-sync:4.7.0'
    // https://mvnrepository.com/artifact/commons-lang/commons-lang
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3

    compile  "org.apache.kafka:kafka-clients:$kafkaVersion"
    compile "io.confluent:kafka-avro-serializer:$confluentVersion"
    compile  "org.apache.kafka:kafka-streams:$kafkaVersion"
    compile "io.confluent:kafka-schema-registry:$confluentVersion"
    // https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple
    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'


    compile "org.json:json:20170516"
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.2'
    compile group: 'junit', name: 'junit', version:'4.12'
    compile "com.google.code.gson:gson:2.8.5"

    compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet-core', version:'2.19'
    compile group: 'org.eclipse.jetty', name: 'jetty-servlet', version:'9.2.12.v20150709'
    compile group: 'org.glassfish.jersey.media', name: 'jersey-media-multipart', version:'2.19'
    compile group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version:'2.19'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version:'2.5.3'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version:'2.5.3'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version:'2.5.3'
    compile group: 'junit', name: 'junit', version:'4.12'
    compile "org.glassfish.jersey.containers:jersey-container-grizzly2-http:2.19"
    // https://mvnrepository.com/artifact/commons-lang/commons-lang
    compile group: 'org.apache.poi', name: 'poi', version: '4.1.2'
    compile group: 'org.apache.poi', name: 'poi-ooxml', version: '4.1.2'




//    // https://mvnrepository.com/artifact/org.imgscalr/imgscalr-lib
    compile group: 'org.imgscalr', name: 'imgscalr-lib', version: '4.2'
    compile "com.opencsv:opencsv:4.0"
    compile "org.simpleflatmapper:sfm-csv:6.0.3"

    implementation "jakarta.xml.bind:jakarta.xml.bind-api:2.3.2"
    implementation "org.glassfish.jaxb:jaxb-runtime:2.3.2"


    //dependency-injection
    compile"com.google.dagger:dagger:$daggerVersion"

    kapt "com.google.dagger:dagger-compiler:$daggerVersion"


//    compile project(':Common')
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    testCompile "org.assertj:assertj-core:3.3.0"
    testCompile group: 'org.apache.kafka', name: 'kafka-streams', version: kafkaVersion, classifier:'test'
    testCompile group: 'org.apache.kafka', name: 'kafka-clients', version:kafkaVersion, classifier:'test'
    testCompile group: 'org.apache.kafka', name: 'kafka_2.11', version:'1.0.0', classifier:'test'
    testCompile "org.json:json:20170516"
    testCompile group: 'org.apache.curator', name: 'curator-test', version: '4.0.0'
    testCompile "org.apache.curator:curator-test:2.9.0"
    testCompile group: 'io.confluent', name: 'kafka-schema-registry', version:confluentVersion, classifier:'tests'
    testCompile group: 'io.confluent', name: 'kafka-schema-registry', version:confluentVersion
    testCompile group: "de.flapdoodle.embed", name: "de.flapdoodle.embed.mongo", version: "2.0.0"

    testCompile group: 'org.glassfish.jersey.test-framework', name: 'jersey-test-framework-core', version: '2.19'
    testCompile group: 'com.nhaarman', name: 'mockito-kotlin', version: '1.6.0'
    // testCompile group: 'org.glassfish.jersey.test-framework.providers', name: 'jersey-test-framework-provider-grizzly2', version: '2.19'

    // https://mvnrepository.com/artifact/org.glassfish.jersey.test-framework.providers/jersey-test-framework-provider-grizzly2
    testCompile group: 'org.glassfish.jersey.test-framework.providers', name: 'jersey-test-framework-provider-grizzly2', version: '2.19'




    testCompile group: 'org.apache.kafka', name: 'kafka-streams-test-utils', version: kafkaVersion
    // https://mvnrepository.com/artifact/commons-io/commons-io
    compile group: 'commons-io', name: 'commons-io', version: '2.4'


    kaptTest "com.google.dagger:dagger-compiler:$daggerVersion"


}

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'IntegrationManagerBeta',
                'Implementation-Version': version,
                'Main-Class': 'com.fretron.ApplicationKt'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
    exclude ('META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA')

}



jacoco {
    toolVersion = jacocoVersion
    reportsDir = file("$buildDir/jacoco-report")
}

jacocoTestReport {
    reports {
        xml.enabled = true
        csv.enabled =false
        html.enabled  = true
    }
}

test {
    ignoreFailures = true
}



buildscript {

    ext.kotlin_version = '1.3.61'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}


























//apply plugin: 'java'
//apply plugin: 'kotlin'
//apply plugin: 'maven'
//apply plugin: 'kotlin-kapt'
//apply plugin: "jacoco"
//
////plugins {
////    id 'java'
////    id 'org.jetbrains.kotlin.jvm' version '1.8.20-RC'
////}
//
//group 'org.example'
//version '1.0-SNAPSHOT'
//
//repositories {
//    mavenCentral()
//    maven { url 'https://packages.confluent.io/maven/' }
//}
//
//ext {
//    jerseyVersion = '2.19'
//    jettyVersion = '9.2.12.v20150709'
//    kafkaVersion = '3.2.0'
//    confluentVersion = '4.0.0'
//    daggerVersion="2.16"
//    jacocoVersion = '0.8.1'
//}
//
//dependencies {
//    //    compile "org.mongodb:mongo-java-driver:3.5.0"
//    compile "redis.clients:jedis:2.9.0"
//    compile 'org.mongodb:mongodb-driver-sync:4.7.0'
//    // https://mvnrepository.com/artifact/commons-lang/commons-lang
//    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
//
//
//
//
//    compile  "org.apache.kafka:kafka-clients:$kafkaVersion"
//    compile "io.confluent:kafka-avro-serializer:$confluentVersion"
//    compile  "org.apache.kafka:kafka-streams:$kafkaVersion"
//    compile "io.confluent:kafka-schema-registry:$confluentVersion"
//    // https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple
//    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'
//
//
//    compile "org.json:json:20170516"
//    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.2'
//    compile group: 'junit', name: 'junit', version:'4.12'
//    compile "com.google.code.gson:gson:2.8.5"
//
//    compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet-core', version:'2.19'
//    compile group: 'org.eclipse.jetty', name: 'jetty-servlet', version:'9.2.12.v20150709'
//    compile group: 'org.glassfish.jersey.media', name: 'jersey-media-multipart', version:'2.19'
//    compile group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version:'2.19'
//    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version:'2.5.3'
//    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version:'2.5.3'
//    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version:'2.5.3'
//    compile group: 'junit', name: 'junit', version:'4.12'
//    compile "org.glassfish.jersey.containers:jersey-container-grizzly2-http:2.19"
//    // https://mvnrepository.com/artifact/commons-lang/commons-lang
//    compile group: 'org.apache.poi', name: 'poi', version: '4.1.2'
//    compile group: 'org.apache.poi', name: 'poi-ooxml', version: '4.1.2'
//
//
//
//
////    // https://mvnrepository.com/artifact/org.imgscalr/imgscalr-lib
//    compile group: 'org.imgscalr', name: 'imgscalr-lib', version: '4.2'
//    compile "com.opencsv:opencsv:4.0"
//    compile "org.simpleflatmapper:sfm-csv:6.0.3"
//
//    implementation "jakarta.xml.bind:jakarta.xml.bind-api:2.3.2"
//    implementation "org.glassfish.jaxb:jaxb-runtime:2.3.2"
//
//
//    //dependency-injection
//    compile"com.google.dagger:dagger:$daggerVersion"
//
//    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
//
//
////    implementation project(':Common')
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
//    testCompile "org.assertj:assertj-core:3.3.0"
//    testCompile group: 'org.apache.kafka', name: 'kafka-streams', version: kafkaVersion, classifier:'test'
//    testCompile group: 'org.apache.kafka', name: 'kafka-clients', version:kafkaVersion, classifier:'test'
//    testCompile group: 'org.apache.kafka', name: 'kafka_2.11', version:'1.0.0', classifier:'test'
//    testCompile "org.json:json:20170516"
//    testCompile group: 'org.apache.curator', name: 'curator-test', version: '4.0.0'
//    testCompile "org.apache.curator:curator-test:2.9.0"
//    testCompile group: 'io.confluent', name: 'kafka-schema-registry', version:confluentVersion, classifier:'tests'
//    testCompile group: 'io.confluent', name: 'kafka-schema-registry', version:confluentVersion
//    testCompile group: "de.flapdoodle.embed", name: "de.flapdoodle.embed.mongo", version: "2.0.0"
//
//    testCompile group: 'org.glassfish.jersey.test-framework', name: 'jersey-test-framework-core', version: '2.19'
//    testCompile group: 'com.nhaarman', name: 'mockito-kotlin', version: '1.6.0'
//    // testCompile group: 'org.glassfish.jersey.test-framework.providers', name: 'jersey-test-framework-provider-grizzly2', version: '2.19'
//    // https://mvnrepository.com/artifact/org.glassfish.jersey.test-framework.providers/jersey-test-framework-provider-grizzly2
//    testCompile group: 'org.glassfish.jersey.test-framework.providers', name: 'jersey-test-framework-provider-grizzly2', version: '2.19'
//
//    testCompile group: 'org.apache.kafka', name: 'kafka-streams-test-utils', version: kafkaVersion
//    // https://mvnrepository.com/artifact/commons-io/commons-io
//    compile group: 'commons-io', name: 'commons-io', version: '2.4'
//    kaptTest "com.google.dagger:dagger-compiler:$daggerVersion"
//
//}
//
//test {
//    useJUnitPlatform()
//}
//compileKotlin {
//    kotlinOptions {
//        jvmTarget = "1.8"
//    }
//}
//compileTestKotlin {
//    kotlinOptions {
//        jvmTarget = "1.8"
//    }
//}
//
//buildscript {
//
//    ext.kotlin_version = '1.3.61'
//    repositories {
//        mavenCentral()
//    }
//    dependencies {
//        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
//    }
//}
//compileKotlin {
//    kotlinOptions {
//        jvmTarget = "1.8"
//    }
//}
//compileTestKotlin {
//    kotlinOptions {
//        jvmTarget = "1.8"
//    }
//}
//
//
////dependencies {
//////    implementation "org.jetbrains.kotlin:kotlin-stdlib"
////    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.5.31'
////
////    implementation "org.jetbrains.kotlin:kotlin-gradle-plugin:1.5.31"
////    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.1")
////    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
////
////    implementation 'com.google.code.gson:gson:2.8.9'
////    implementation 'org.glassfish.jersey.containers:jersey-container-grizzly2-http:2.32'
////    implementation group: 'org.glassfish.jersey.inject', name: 'jersey-hk2', version: '2.32'
////    //api for json
////    implementation group: 'org.json', name: 'json', version: '20201115'
//////    implementation group: 'org.json', name: 'json', version: '20160810'
////
////
////    implementation group: 'junit', name: 'junit', version: '4.12'
////
////    implementation group: 'org.glassfish.jersey.core', name: 'jersey-server', version: '2.27'
////    //object mapper for kotlin
//////    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.8.+'
////
////    //object mapper
////    implementation group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version: '2.32'
////
////    //    implementation "org.mongodb:mongo-java-driver:3.5.0"
////    implementation "redis.clients:jedis:2.9.0"
////    implementation 'org.mongodb:mongodb-driver-sync:4.7.0'
////    // https://mvnrepository.com/artifact/commons-lang/commons-lang
////    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
////
////
////    implementation "org.apache.kafka:kafka-clients:$kafkaVersion"
////    implementation "io.confluent:kafka-avro-serializer:$confluentVersion"
////    implementation "org.apache.kafka:kafka-streams:$kafkaVersion"
////    implementation "io.confluent:kafka-schema-registry:$confluentVersion"
////    // https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple
////    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'
////
////
////    implementation "org.json:json:20170516"
////    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.2'
////    implementation group: 'junit', name: 'junit', version:'4.12'
////    implementation "com.google.code.gson:gson:2.8.5"
////
////    implementation group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet-core', version:'2.19'
////    implementation group: 'org.eclipse.jetty', name: 'jetty-servlet', version:'9.2.12.v20150709'
////    implementation group: 'org.glassfish.jersey.media', name: 'jersey-media-multipart', version:'2.19'
////    implementation group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version:'2.19'
////    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version:'2.5.3'
////    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version:'2.5.3'
////    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version:'2.5.3'
////    implementation group: 'junit', name: 'junit', version:'4.12'
////    implementation "org.glassfish.jersey.containers:jersey-container-grizzly2-http:2.19"
////    // https://mvnrepository.com/artifact/commons-lang/commons-lang
////    implementation group: 'org.apache.poi', name: 'poi', version: '4.1.2'
////    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '4.1.2'
////
////
////
////
//////    // https://mvnrepository.com/artifact/org.imgscalr/imgscalr-lib
////    implementation group: 'org.imgscalr', name: 'imgscalr-lib', version: '4.2'
////    implementation "com.opencsv:opencsv:4.0"
////    implementation "org.simpleflatmapper:sfm-csv:6.0.3"
////
////    implementation "jakarta.xml.bind:jakarta.xml.bind-api:2.3.2"
////    implementation "org.glassfish.jaxb:jaxb-runtime:2.3.2"
////
////
////    //dependency-injection
////    implementation"com.google.dagger:dagger:$daggerVersion"
////
////    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
////
////
//////    implementation project(':Common')
////    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
////    implementation "org.assertj:assertj-core:3.3.0"
////    implementation group: 'org.apache.kafka', name: 'kafka-streams', version: kafkaVersion, classifier:'test'
////    implementation group: 'org.apache.kafka', name: 'kafka-clients', version:kafkaVersion, classifier:'test'
////    implementation group: 'org.apache.kafka', name: 'kafka_2.11', version:'1.0.0', classifier:'test'
////    implementation "org.json:json:20170516"
////    implementation group: 'org.apache.curator', name: 'curator-test', version: '4.0.0'
////    implementation "org.apache.curator:curator-test:2.9.0"
////    implementation group: 'io.confluent', name: 'kafka-schema-registry', version:confluentVersion, classifier:'tests'
////    implementation group: 'io.confluent', name: 'kafka-schema-registry', version:confluentVersion
////    implementation group: "de.flapdoodle.embed", name: "de.flapdoodle.embed.mongo", version: "2.0.0"
////
////    implementation group: 'org.glassfish.jersey.test-framework', name: 'jersey-test-framework-core', version: '2.19'
////    implementation group: 'com.nhaarman', name: 'mockito-kotlin', version: '1.6.0'
////    // implementation group: 'org.glassfish.jersey.test-framework.providers', name: 'jersey-test-framework-provider-grizzly2', version: '2.19'
////
////    // https://mvnrepository.com/artifact/org.glassfish.jersey.test-framework.providers/jersey-test-framework-provider-grizzly2
////    implementation group: 'org.glassfish.jersey.test-framework.providers', name: 'jersey-test-framework-provider-grizzly2', version: '2.19'
////
////    implementation group: 'org.apache.kafka', name: 'kafka-streams-test-utils', version: kafkaVersion
////    // https://mvnrepository.com/artifact/commons-io/commons-io
////    implementation group: 'commons-io', name: 'commons-io', version: '2.4'
////    kaptTest "com.google.dagger:dagger-compiler:$daggerVersion"
////
////}
